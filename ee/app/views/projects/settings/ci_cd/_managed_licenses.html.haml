- return unless @project.feature_available?(:license_management)
- expanded = expanded_by_default?

%section.settings.no-animate#js-license-management{ class: ('expanded' if expanded), data: { qa_selector: 'license_compliance_settings_content' } }
  .settings-header
    %h4
      = s_('LicenseCompliance|License Compliance')
      = link_to icon('question-circle'), help_page_path('user/application_security/license_compliance/index.md'), target: '_blank', rel: 'noopener noreferrer'
    %button.btn.js-settings-toggle{ type: 'button' }
      = expanded ? _('Collapse') : _('Expand')
    %p
      - ci = link_to(s_('Gitlab CI/CD'), 'https://docs.gitlab.com/ee/ci/', target: '_blank', rel: 'noopener noreferrer')
      - license = link_to(s_('Auto License Compliance'), 'https://docs.gitlab.com/ee/topics/autodevops/index.html#auto-license-management-ultimate', target: '_blank', rel: 'noopener noreferrer')
      = s_('LicenseCompliance|Here you can approve or blacklist licenses for this project. Using %{ci} or %{license} will allow you to see if there are any unmanaged licenses and approve or blacklist them in merge request.').html_safe % { ci: ci, license: license }
  .settings-content
    #js-managed-licenses{ data: { api_url: @license_management_url } }
