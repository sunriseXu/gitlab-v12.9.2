- page_title 'Audit Log'

.todos-filters
  .row-content-block.second-block.pb-0
    = form_tag admin_audit_logs_path, method: :get, class: 'filter-form d-flex justify-content-between audit-controls row' do
      .flex-lg-row.col-lg-auto
        .filter-item.inline.form-group.mr-2.mr-md-0
          - if params[:sort]
            = hidden_field_tag(:sort, params[:sort])
          - if params[:entity_type].present?
            = hidden_field_tag(:entity_type, params[:entity_type])

          = dropdown_tag(audit_entity_type_label(params[:entity_type]),
            options: { toggle_class: 'js-type-search js-filter-submit js-type-filter',
            dropdown_class: 'dropdown-menu-type dropdown-menu-selectable dropdown-menu-action js-filter-submit',
            placeholder: 'Search types',
            data: { field_name: 'entity_type', data: audit_entity_type_options, default_label: 'All Events' } })

        - if params[:entity_type] == 'User'
          .filter-item.inline.form-group
            - if params[:entity_id].present?
              = hidden_field_tag(:entity_id, params[:entity_id], class:'hidden-filter-value')

            = dropdown_tag(@entity&.name || _('Search users'),
              options: { toggle_class: 'js-user-search js-filter-submit', filter: true,
              dropdown_class: 'dropdown-menu-user dropdown-menu-selectable',
              placeholder: _('Search users'),
              data: { first_user: (current_user.username if current_user), null_user: true, current_user: true, field_name: 'entity_id' } })

        - elsif params[:entity_type] == 'Project'
          .filter-item.inline.form-group
            = project_select_tag(:entity_id, { class: 'project-item-select hidden-filter-value',
              toggle_class: 'js-project-search js-project-filter js-filter-submit',
              dropdown_class: 'dropdown-menu-selectable dropdown-menu-project js-filter-submit',
              placeholder: @entity&.full_name || _('Search projects'), idAttribute: 'id',
              data: { order_by: 'last_activity_at', idattribute: 'id', all_projects: 'true', simple_filter: true } })

        - elsif params[:entity_type] == 'Group'
          .filter-item.inline.form-group
            = groups_select_tag(:entity_id, { required: true, class: 'group-item-select project-item-select hidden-filter-value',
              toggle_class: 'js-group-search js-group-filter js-filter-submit',
              dropdown_class: 'dropdown-menu-selectable dropdown-menu-group js-filter-submit',
              placeholder: @entity&.full_path || _('Search groups'), idAttribute: 'id',
              data: { order_by: 'last_activity_at', idattribute: 'id', all_available: true } })

      .d-flex.col-lg-auto
        = render 'shared/audit_events/event_filter'

- if @events.present?
  %table#events-table.table
    %thead
      %tr
        %th Author
        %th Object
        %th Action
        %th Target
        %th IP Address
        %th Date
    %tbody
      - @events.map(&:present).each do |event|
        %tr{ data: { qa_selector: 'admin_audit_log_row_content' } }
          %td
            - if (author_link = event.author_name)
              = author_link
            - else
              #{event.details[:author_name]} <small>(removed)</small>
          %td
            - if (object_link = event.object)
              = object_link
            - else
              #{event.details[:entity_path]} <small>(removed)</small>
          %td= sanitize(event.action, tags: %w(strong))
          %td= event.target
          %td= event.ip_address
          %td= event.date
  = paginate_without_count @events
